{{{{vue-js}}}}

<div class="app">
	<div class="sidebar">
		<div class="sidebar_entry" v-for="tab in tabs" v-bind:key="tab.id" v-bind:class="currentTab === tab.id ? activeTabClass : ''" v-on:click="currentTab = tab.id">
			<span class="im" v-bind:class="tab.iconClass"></span>
		</div>
	</div>

	<div class="tabs">
		<tab-players v-if="currentTab === 'players'" v-bind:players="players"></tab-players>
		<tab-logs v-if="currentTab === 'logs'" v-bind:logs="logs"></tab-logs>
	</div>

</div>

{{{{/vue-js}}}}

<p>test</p>

<script type="text/javascript">
	let vm = new Vue({
		el: '.app',
		data: {
			tabs: [{
				id: "players",
				name: "Players",
				iconClass: "im-user-male"
			},{
				id: "logs",
				name: "Logs",
				iconClass: "im-note-o"
			}],
			currentTab: "players",
			activeTabClass: 'active',

			players: [{
				id: 1,
				name: "Pony",
				steamid: "x64",
				roles: [{
					id: 0,
					name: 'owner',
					isEnabled: false
				},{
					id: 1,
					name: 'admin',
					isEnabled: true
				}]
			},{
				id: 2,
				name: "Carsa",
				steamid: "x32",
				roles: [{
					id: 0,
					name: 'owner',
					isEnabled: true
				},{
					id: 1,
					name: 'admin',
					isEnabled: true
				}]
			}],

			logs: [{
				time: new Date().getTime(),
				message: 'server started'
			},{
				time: new Date().getTime(),
				message: 'fondling ponies'
			},{
				time: new Date().getTime(),
				message: 'loading lasers'
			}]
		}
	});

</script>


<script type="text/javascript" src="/static/scripts/websock.js"></script>

<script type="text/javascript">
	$(window).on('load', ()=>{
		let ws = new WebSock('ws://' + window.location.host + '/ws', 'XYZ')

		ws.on('open', ()=>{
			log('C2Client is now open')

			setTimeout(()=>{
				ws.send(JSON.stringify({
					requestType: 'rtt',
					data: new Date().getTime()
				})).then((res)=>{
					let parsed = JSON.parse(res)
					console.log('rtt response success', parsed)
				}).catch((err)=>{
					console.warn('rtt response unsuccessful', err)
				})
			}, 1000)
		})

		ws.on('close', ()=>{
			console.log('WebSock is now closed')
		})

		ws.on('message', (data)=>{
			return new Promise((fulfill, reject)=>{
				console.log('WebSock received message', data)

				let parsed
				try {
					parsed = JSON.parse(data)
				} catch (ex){
					error('error parsing message', ex)
					reject('error parsing message: ' + ex)
					return
				}

				switch(parsed.requestType){
					case 'rtt-response': {
						log('RoundTripTime:', new Date().getTime() - parsed.data, 'ms')
						fulfill()
					}; break;

					default: {
						reject('unsupported request type', parsed.requestType)
					}
				}
			})
		})

		function log(...args){
			console.log.apply(null, ['C2Client:'].concat(args))
		}

		function error(...args){
			console.error.apply(null, ['C2Client Error:'].concat(args))
		}
	})
</script>


